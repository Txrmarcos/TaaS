type VoteType = 
 variant {
   Against;
   For;
 };
type Vote = 
 record {
   timestamp: Time;
   vote_type: VoteType;
   voter: principal;
 };
type Time = int;
type ProposalStatus = 
 variant {
   Approved;
   Pending;
   Rejected;
 };
type Proposal = 
 record {
   created_at: Time;
   description: text;
   id: nat;
   name: text;
   pr_link: text;
   proposer: principal;
   status: ProposalStatus;
   url: text;
   votes: vec Vote;
   votes_against: nat;
   votes_for: nat;
 };
service : {
  get_proposal: (id: nat) -> (opt Proposal);
  get_user_vote: (id: nat, user: principal) -> (opt Vote);
  get_vote_history: (id: nat) -> (opt vec Vote);
  list_proposals: () -> (vec Proposal);
  propose_source: (name: text, url: text, pr_link: text, description:
   text) -> (nat);
  vote_source: (id: nat, is_for: bool) -> (text);
}
