
import type { Metadata } from "next";
import { Geist, Geist_Mono, Orbitron } from "next/font/google";
import "./globals.css";
import { AuthProvider } from "@/context/AuthContext";
import { LoadingProvider } from "@/context/LoadingContext";
import { LoadingIntegrationWrapper } from "@/components/LoadingIntegrationWrapper";

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

const orbitron = Orbitron({
    variable: "--font-orbitron",
    subsets: ["latin"],
    weight: ["600"], // ou o peso desejado
});

export default function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    return (
        <html lang="en">
            <body
                className={`${geistSans.variable} ${geistMono.variable} ${orbitron.variable} antialiased`}
            >
                <AuthProvider>
                    <LoadingProvider>
                        <LoadingIntegrationWrapper showLoadingDetails={true}>
                            {children}
                        </LoadingIntegrationWrapper>
                    </LoadingProvider>
                </AuthProvider>
            </body>
        </html>
    );
}
